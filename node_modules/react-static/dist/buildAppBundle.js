'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _webpackConfigurator = require('webpack-configurator');

var _webpackConfigurator2 = _interopRequireDefault(_webpackConfigurator);

var _webpackConfig = require('./webpack.config.prod');

var _webpackConfig2 = _interopRequireDefault(_webpackConfig);

var _static = require('./static');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
var config = (0, _static.getConfig)();
var webpackConfigProd = new _webpackConfigurator2.default();

webpackConfigProd.merge(_webpackConfig2.default);
if (config.webpack) {
  config.webpack(webpackConfigProd, { stage: 'production' });
}
var finalWebpackConfigProd = webpackConfigProd.resolve();

var compilerProd = (0, _webpack2.default)(finalWebpackConfigProd);

var _default = function _default() {
  var build = function build(stage, compiler) {
    return new Promise(function (resolve, reject) {
      compiler.run(function (err, stats) {
        if (err) {
          console.log(_chalk2.default.red(err.stack || err));
          if (err.details) {
            console.log(_chalk2.default.red(err.details));
          }
          return reject(err);
        }

        stats.toJson('verbose');

        var buildErrors = stats.hasErrors();
        var buildWarnings = stats.hasWarnings();

        if (buildErrors || buildWarnings) {
          console.log(stats.toString({
            context: webpackConfigProd.context,
            performance: false,
            hash: false,
            timings: true,
            entrypoints: false,
            chunkOrigins: false,
            chunkModules: false,
            colors: true
          }));
          console.log(_chalk2.default.red.bold('\n=> There were ERRORS during the ' + stage + ' build stage! :(\n=> Fix them and try again!'));
        }

        resolve();
      });
    });
  };

  return Promise.all([build('production', compilerProd)]);
};

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(config, 'config', 'src/buildAppBundle.js');

  __REACT_HOT_LOADER__.register(webpackConfigProd, 'webpackConfigProd', 'src/buildAppBundle.js');

  __REACT_HOT_LOADER__.register(finalWebpackConfigProd, 'finalWebpackConfigProd', 'src/buildAppBundle.js');

  __REACT_HOT_LOADER__.register(compilerProd, 'compilerProd', 'src/buildAppBundle.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/buildAppBundle.js');
}();

;